#!/usr/bin/env python
# -*- coding: utf-8 -*- 

import argparse
import sys
import os

valid_algorithms = ['quicksort', 'mergesort', 'heapsort']

def main(args):
    algorithm = args.algorithm
    if algorithm and algorithm.lower() in valid_algorithms:
        compile_all()
        execute(algorithm.lower(), args.input, args.output)
    else:
        print "Invalid algorithm. It can be 'mergesort', 'heapsort' or 'quicksort'"

def compile_all():
    os.system("javac src/*.java")

def execute(algorithm, input, output):
    print 'Selected method: ' + algorithm
    print 'Sorting...'
    command = "java src/Main {0} {1} {2}".format(algorithm, input, output)
    os.system(command)

def verify_get_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('algorithm', help='algorithm to be used')
    parser.add_argument('input', nargs='?', default='data/input.txt', help='input file')
    parser.add_argument('output', nargs='?', default='output.txt', help='output file')
    if len(sys.argv[1:]) == 0: 
        print "You must inform a sorting method"
        sys.exit()
    return parser.parse_args()

if __name__ == "__main__":
    args = verify_get_args()
    main(args)